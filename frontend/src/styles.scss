// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$primary: mat.define-palette(mat.$green-palette);
$accent: mat.define-palette(mat.$purple-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$warn: mat.define-palette(mat.$red-palette);
$backgroud-palette: (
    50 : #f4f4f5,
    100 : #c2c2c6,
    200 : #9a9aa0,
    300 : #71727a,
    400 : #52535e,
    500 : #343541,
    600 : #2f303b,
    700 : #272832,
    800 : #21222a,
    900 : #15161c,
    A100 : #2289f9,
    A200 : #066ad8,
    A400 : #005ec5,
    A700 : #0057b5,
    contrast: (
        50 : #000000,
        100 : #000000,
        200 : #000000,
        300 : #ffffff,
        400 : #ffffff,
        500 : #ffffff,
        600 : #ffffff,
        700 : #ffffff,
        800 : #ffffff,
        900 : #ffffff,
        A100 : #ffffff,
        A200 : #ffffff,
        A400 : #ffffff,
        A700 : #ffffff,
    )
);
$background: mat.define-palette($backgroud-palette);
$background-component: white;
$background-component-contrast: rgba(0, 0, 0, 0.87);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$theme: mat.define-light-theme((color: (primary: $primary,
                accent: $accent,
                warn: $warn,
            )));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($theme);

.mat-app-background {
    background: mat.get-color-from-palette($background, 50) !important;
}

.darkTheme {
    $theme: mat.define-dark-theme((color: (primary: $primary,
                accent: $accent,
                warn: $warn,
            )));
    $background-component: mat.get-color-from-palette($background, 700);
    $background-component-contrast: mat.get-color-from-palette($background, '700-contrast');

    @include mat.all-component-themes($theme);
    background: mat.get-color-from-palette($background, 500) !important;

    .mat-drawer-side,
    .mat-mdc-paginator,
    .mdc-menu-surface {
        background: $background-component !important;
        color: $background-component-contrast !important;
    }

    .background-component:hover {
        background: mat.get-color-from-palette($background, 600) !important;
        color: mat.get-color-from-palette($background, '600-contrast') !important;
    }

    .mdc-text-field {
        background: mat.get-color-from-palette($background, 800) !important;
        color: mat.get-color-from-palette($background, '800-contrast') !important;
    }

    a:link {
        color: #77F;
    }

    a:active {
        color: #E00;
    }
}

/* You can add global styles to this file, and also import other style files */

html,
body {
    height: 100%;
}

body {
    margin: 0;
    font-family: Roboto, "Helvetica Neue", sans-serif;
}

.mat-mdc-paginator {
    border-radius: 0.5rem;
}

.background-component:hover {
    background: white;
    color: rgba(0, 0, 0, 0.87);
}

.element {

    span,
    a {
        overflow-wrap: anywhere;
    }
}