server.port=9090
spring.jmx.default-domain=com.fnd.virgo

#DATASOURCE
spring.datasource.url=jdbc:postgresql://${db.host}:${db.port}/${db.name}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=${db.username}
spring.datasource.password=${db.password}

#JPA DB CONFIG
spring.jpa.show-sql=false
spring.jpa.database=postgresql
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

#KEYCLOAK
spring.security.oauth2.client.registration.keycloak.client-id=${keycloak.realm.client-id}
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.provider.keycloak.issuer-uri=${keycloak.url}/realms/${keycloak.realm}
spring.security.oauth2.client.provider.keycloak.token-uri=${spring.security.oauth2.client.provider.keycloak.issuer-uri}/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.authorization-uri=${spring.security.oauth2.client.provider.keycloak.issuer-uri}/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.user-info-uri=${spring.security.oauth2.client.provider.keycloak.issuer-uri}/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=${spring.security.oauth2.client.provider.keycloak.issuer-uri}/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
spring.security.oauth2.resourceserver.jwt.issuer-uri=${spring.security.oauth2.client.provider.keycloak.issuer-uri}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.client.provider.keycloak.jwk-set-uri}

logging.level.org.springframework.security=DEBUG
logging.level.org.keycloak=TRACE